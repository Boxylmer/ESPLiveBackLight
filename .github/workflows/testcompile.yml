name: Build binary

on: 
    push: 
        branches:
            - master

jobs:
    build: 
        runs-on: windows-2022

        steps:
        - name: Checkout repo
          uses: actions/checkout@v3
          
        - name: Python 3.8 setup
          uses: actions/setup-python@v4
          with: 
            python-version: 3.8
        
        - name: Install python deps
          run: |
            python -m venv .venv
            .venv\Scripts\python -m pip install -r requirements.txt

        - name: Build pyinstaller executable
          run: | 
            .venv\Scripts\python .\DesktopApp\compile.py

        - name: Set up release version
          run: echo "RELEASE_VERSION=v$(date +'%Y%m%d')" >> $GITHUB_ENV
          shell: bash

        - name: Create tag
          run: |
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git tag ${{ env.RELEASE_VERSION }}
            git push --tags

        - name: Create release artifacts directory
          run: |
            mkdir -p release_artifacts

        # Prepare an installer release
        - name: Compile Inno Setup Script
          run: |
            ISCC.exe ./DesktopApp/innosetup.iss
        
        - name: Archive installer files
          run: |
            Compress-Archive -Path "DesktopApp/Output/setup.exe" -DestinationPath "release_artifacts/BoxmanFiddlejigInstaller.zip"
          shell: pwsh

        - name: Create and Upload Release
          uses: softprops/action-gh-release@v1
          with:
            name: Release ${{ env.RELEASE_VERSION }}
            tag_name: ${{ env.RELEASE_VERSION }}
            body: "Installer for Boxman Fiddlejig."
            token: ${{ secrets.RELEASE_TOKEN }}
            files: release_artifacts/BoxmanFiddlejigInstaller.zip

        # # prepare a direct release
        # - name: Prepare release files
        #   run: |
        #     mkdir release_artifacts
        #     xcopy "DesktopApp\dist\Boxman Fiddlejig" "release_artifacts\Boxman Fiddlejig" /E /Y /I

        # - name: Archive release files
        #   run: Compress-Archive -Path "release_artifacts/Boxman Fiddlejig/*" -DestinationPath "release_artifacts/BoxmanFiddlejig.zip"
        #   shell: pwsh

        # - name: Create and Upload Release
        #   uses: softprops/action-gh-release@v1
        #   with:
        #     name: Release ${{ env.RELEASE_VERSION }}
        #     tag_name: $RELEASE_VERSION
        #     body: "Do not run this yet."
        #     token: ${{ secrets.RELEASE_TOKEN }}
        #     files: release_artifacts/BoxmanFiddlejig.zip






            