name: Build binary

on: 
    push: 
        branches:
            - master


jobs:
    build: 
        runs-on: windows-latest

        steps:
        - name: Checkout repo
          uses: actions/checkout@v2
          
        - name: Python 3.8 setup
          uses: actions/setup-python@v2
          with: 
            python-version: 3.8
        
        - name: Install python deps
          run: |
            python -m venv .venv
            .venv\Scripts\python -m pip install -r requirements.txt

        - name: Build pyinstaller executable
          run: | 
            .venv\Scripts\python .\DesktopApp\compile.py

        - name: Prepare release files
          run: |
            mkdir release_artifacts
            xcopy "DesktopApp\dist\Boxman Fiddlejig" "release_artifacts\Boxman Fiddlejig" /E /Y /I


            
        - name: Set up release version
          run: echo "RELEASE_VERSION=v$(date +'%Y%m%d')" >> $GITHUB_ENV



        - name: Create release and upload binary
          run: |
            gh auth login --with-token <<<"${{ secrets.GITHUB_TOKEN }}"
            echo "Using RELEASE_VERSION: $RELEASE_VERSION"
            if gh release view $RELEASE_VERSION; then
                gh release delete $RELEASE_VERSION --yes
            fi
        
            gh release create $RELEASE_VERSION release_artifacts/* --title "Release $RELEASE_VERSION" --notes "Do not run this yet."
          shell: bash

        # - name: Set up release version
        #   id: version
        #   run: echo "::set-output name=version::v$(date +'%Y%m%d')"

  
        # - name: Create Release
        #   id: create_release
        #   uses: actions/create-release@v1
        #   with:
        #     tag_name: ${{ steps.version.outputs.version }}
        #     release_name: Release ${{ steps.version.outputs.version }}
        #     draft: false
        #     prerelease: false
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        # - name: Upload artifacts to the release
        #   uses: actions/upload-artifact@v3
        #   with:
        #     name: my-artifacts
        #     path: release_artifacts/




            